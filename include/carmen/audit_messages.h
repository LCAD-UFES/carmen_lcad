#ifndef AUDIT_MESSAGES_H_
#define AUDIT_MESSAGES_H_

#include <carmen/carmen.h>


#ifdef __cplusplus
extern "C" {
#endif

#define STATUS_PERIOD				0.2

// decision_making_status
#define	ROUTE_PLANNER_ERROR  		0b00000000000000000000000000000001
#define	BEHAVIOR_SELECTOR_ERROR  	0b00000000000000000000000000000010
#define	MPP_ERROR  					0b00000000000000000000000000000100
#define	OBSTACLE_AVOIDER_ERROR  	0b00000000000000000000000000001000
//

// basic_perception_status
#define	LOCALIZER_ERROR  			0b00000000000000000000000000000001
#define	OD_MAPPER_ERROR  			0b00000000000000000000000000000010
#define	VEHICLE_ODOMETRY_ERROR  	0b00000000000000000000000000000100 // carmen_base_ackerman_odometry_message
#define	IMU_ERROR  					0b00000000000000000000000000001000
#define	GPS_ERROR  					0b00000000000000000000000000010000
#define	VELODYNE_ERROR  			0b00000000000000000000000000100000
#define	LDMRS_ERROR  				0b00000000000000000000000001000000
#define	FORD_ESCAPE_STATUS_ERROR	0b00000000000000000000000010000000
//

// lidar_status
#define LIDAR0_ERROR				0b00000000000000000000000000000001
#define LIDAR1_ERROR				0b00000000000000000000000000000010
#define LIDAR2_ERROR				0b00000000000000000000000000000100
#define LIDAR3_ERROR				0b00000000000000000000000000001000
#define LIDAR4_ERROR				0b00000000000000000000000000010000
#define LIDAR5_ERROR				0b00000000000000000000000000100000
#define LIDAR6_ERROR				0b00000000000000000000000001000000
#define LIDAR7_ERROR				0b00000000000000000000000010000000
#define LIDAR8_ERROR				0b00000000000000000000000100000000
#define LIDAR9_ERROR				0b00000000000000000000001000000000
#define LIDAR10_ERROR				0b00000000000000000000010000000000
#define LIDAR11_ERROR				0b00000000000000000000100000000000
#define LIDAR12_ERROR				0b00000000000000000001000000000000
#define LIDAR13_ERROR				0b00000000000000000010000000000000
#define LIDAR14_ERROR				0b00000000000000000100000000000000
#define LIDAR15_ERROR				0b00000000000000001000000000000000
//

// camera_status
#define CAMERA1_ERROR				0b00000000000000000000000000000001
#define CAMERA2_ERROR				0b00000000000000000000000000000010
#define CAMERA3_ERROR				0b00000000000000000000000000000100
#define CAMERA4_ERROR				0b00000000000000000000000000001000
#define CAMERA5_ERROR				0b00000000000000000000000000010000
#define CAMERA6_ERROR				0b00000000000000000000000000100000
#define CAMERA7_ERROR				0b00000000000000000000000001000000
#define CAMERA8_ERROR				0b00000000000000000000000010000000
#define CAMERA9_ERROR				0b00000000000000000000000100000000
#define CAMERA10_ERROR				0b00000000000000000000001000000000
#define CAMERA11_ERROR				0b00000000000000000000010000000000
#define CAMERA12_ERROR				0b00000000000000000000100000000000
#define CAMERA13_ERROR				0b00000000000000000001000000000000
#define CAMERA14_ERROR				0b00000000000000000010000000000000
#define CAMERA15_ERROR				0b00000000000000000100000000000000
#define CAMERA16_ERROR				0b00000000000000001000000000000000
#define CAMERA17_ERROR				0b00000000000000010000000000000000
#define CAMERA18_ERROR				0b00000000000000100000000000000000
#define CAMERA19_ERROR				0b00000000000001000000000000000000
#define CAMERA20_ERROR				0b00000000000010000000000000000000
//

typedef enum
{
	// decision_making_status
	ROUTE_PLANNER_ERROR_INDEX  		,
	BEHAVIOR_SELECTOR_ERROR_INDEX 	,
	MPP_ERROR_INDEX  				,
	OBSTACLE_AVOIDER_ERROR_INDEX  	,
	//

	// basic_perception_status
	LOCALIZER_ERROR_INDEX  			,
	OD_MAPPER_ERROR_INDEX  			,
	VEHICLE_ODOMETRY_ERROR_INDEX  	,
	IMU_ERROR_INDEX  				,
	GPS_ERROR_INDEX  				,
	VELODYNE_ERROR_INDEX  			,
	LDMRS_ERROR_INDEX				,
	FORD_ESCAPE_STATUS_ERROR_INDEX	,
	//

	// lidar_status
	LIDAR0_ERROR_INDEX				,
	LIDAR1_ERROR_INDEX				,
	LIDAR2_ERROR_INDEX				,
	LIDAR3_ERROR_INDEX				,
	LIDAR4_ERROR_INDEX				,
	LIDAR5_ERROR_INDEX				,
	LIDAR6_ERROR_INDEX				,
	LIDAR7_ERROR_INDEX				,
	LIDAR8_ERROR_INDEX				,
	LIDAR9_ERROR_INDEX				,
	LIDAR10_ERROR_INDEX				,
	LIDAR11_ERROR_INDEX				,
	LIDAR12_ERROR_INDEX				,
	LIDAR13_ERROR_INDEX				,
	LIDAR14_ERROR_INDEX				,
	LIDAR15_ERROR_INDEX				,
	//

	// camera_status
	CAMERA1_ERROR_INDEX				,
	CAMERA2_ERROR_INDEX				,
	CAMERA3_ERROR_INDEX				,
	CAMERA4_ERROR_INDEX				,
	CAMERA5_ERROR_INDEX				,
	CAMERA6_ERROR_INDEX				,
	CAMERA7_ERROR_INDEX				,
	CAMERA8_ERROR_INDEX				,
	CAMERA9_ERROR_INDEX				,
	CAMERA10_ERROR_INDEX			,
	CAMERA11_ERROR_INDEX			,
	CAMERA12_ERROR_INDEX			,
	CAMERA13_ERROR_INDEX			,
	CAMERA14_ERROR_INDEX			,
	CAMERA15_ERROR_INDEX			,
	CAMERA16_ERROR_INDEX			,
	CAMERA17_ERROR_INDEX			,
	CAMERA18_ERROR_INDEX			,
	CAMERA19_ERROR_INDEX			,
	CAMERA20_ERROR_INDEX			,
	//


	AUDIT_ERROR_MONITORING_SIZE			// Sempre em último, utilizado para identificar a quantidade de index possíveis; Se não ficar em último, vai criar um vector com tamanho errado e não será possível comparar os timestamps das mensagens
} audit_error_monitoring_index;


typedef enum
{
	AUDIT_OPERATION_DEFAULT,
	AUDIT_OPERATION_SAVE_FILE
} audit_operation;


typedef struct
{
	audit_operation operation;
	double timestamp;
	char *host;
} carmen_audit_operation_message;

#define		CARMEN_AUDIT_OPERATION_MESSAGE_NAME		"carmen_audit_operation_message_message"
#define		CARMEN_AUDIT_OPERATION_MESSAGE_FMT		"{int, double, string}"


typedef struct
{
	int decision_making_status;
	int basic_perception_status;
	int lidar_status;
	int camera_status;
	int other_sensors_status;
	double timestamp;
	char *host;
} carmen_audit_status_message;

#define		CARMEN_AUDIT_STATUS_MESSAGE_NAME		"carmen_audit_status_message"
#define		CARMEN_AUDIT_STATUS_MESSAGE_FMT			"{int, int, int, int, int, double, string}"


#ifdef __cplusplus
}
#endif

#endif /* AUDIT_MESSAGES_H_ */
