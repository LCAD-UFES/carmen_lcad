SET ODOM_CAN_BUS=vcan0
SET COMMAND_CAN_BUS=vcan0
SET MAP_X=1000.0
SET MAP_Y=1000.0
# SET MAP_X=7757691.01
# SET MAP_Y=-363593.38
SET INITIAL_X=1000.0
SET INITIAL_Y=1000.0
SET INITIAL_THETA=-3.086
SET ORIGIN_X=980.0
SET ORIGIN_Y=980.0
SET ORIGIN_THETA=0.0
SET START_X=1000.0
SET START_Y=1000.0
SET START_THETA=0.0
# SET MISSION=hercules/mission_lcad_pile_yolo.txt
SET MISSION=hercules/mission_pick_block_yolo.txt
# SET MISSION=hercules/mission_pick_block_aruco.txt
#SET MAP_PATH=../data/map_ct13_hercules_corredor_20240918
SET MAP_PATH=../data/ros_to_carmen_converted_map
SET GRAPH=../data/graphs/graph-ct13-hercules-corredor-20240918-1.gr
SET RDDF= wheeltec_hercules/rddf_annotations.txt #hercules/rddf-ct13.txt 
SET CALIBRATION_FILE=calibration_table.txt
SET ROS_BAG_PATH=~/I2CA/argos/ros_bag/ros_bag_LCAD4_27012025
#SET ROS_BAG_PATH=~/I2CA/argos/ros_bag/ros_bag_LCAD4_24012025


# Exemplo de entrada de proccontrol:
# module name		group_name	requested_state		watch_heartbeats	command_line


#### Serviccos de suporte
 jaus		 		support 	1		0		../sharedlib/OpenJAUS/ojNodeManager/bin/ojNodeManager ../sharedlib/OpenJAUS/ojNodeManager/nodeManager_Argos.conf a
 car_driver	  		support 	1		0		../sharedlib/OpenJAUS/ojArgos/bin/ojArgos ${ODOM_CAN_BUS} ${COMMAND_CAN_BUS}
 param_daemon			support		1		0		./param_daemon argos/carmen-argos.ini
 proc_control			support		1		0		./proccontrol_gui
 map_server			support		1		0		./map_server -map_path ${MAP_PATH} -map_x ${MAP_X} -map_y ${MAP_Y} -block_map on  -lanemap_incoming_message_type 0
 joystick			support		0		0		./joystick_vehicle -direct_v_and_phi_mode on

#### Robo
 ford_escape			robot		1		0		./ford_escape_hybrid -robot_model_name 3 -tune_pid_mode on > results_pid.txt
# ford_escape			robot		1		0		./ford_escape_hybrid -robot_model_name 3 -tune_pid_mode on
 base_ackerman			robot		1		0		./base_ackerman
 ros_odometry			robot		1		0		source ~/I2CA/argos/scripts/setup_argos.bash && ros2 run argos_drivers ros_to_carmen_odometry > ros_odometry.txt
 ros_can_comm			robot		0		0		source ~/I2CA/argos/scripts/setup_argos.bash && ros2 run argos_drivers can_to_wirelesscontroller 
# ros_interface			robot		1		0		./base_ackerman
## ros_command			robot		1		0		./base_ackerman
 
#### Sensores
 XSENS_fake			sensors		1		0		./xsens_mtig -disable_xsens on
 OS1-32				sensors		1		0		./ouster -lidar_id 10
 camera1			sensors			1			0		./camera_drivers unitree1 1 
 
#### Processamento dos dados dos Sensores
 gps_xyz			sensor_filter	1		0		./gps_xyz

#### SLAM
 fused_odometry			SLAM		1		0		./fused_odometry -use_gps off -force_initial_pose on -initial_x ${INITIAL_X} -initial_y ${INITIAL_Y} -initial_theta ${INITIAL_THETA}
 localize			SLAM		1		0		./localize_ackerman -mapping_mode off
 mapper				SLAM		1		0		./mapper -map_path ${MAP_PATH}
 mapper_creator			SLAM		0		0		./mapper -map_path ${MAP_PATH} -mapping_mode on  -calibration_file ${CALIBRATION_FILE}
 od_mapper			SLAM		1		0		./obstacle_distance_mapper

#### Hierarquia de controle (top-down)
# task_manager 			planner 	0		0		./task_manager -start_delay off -mission ${MISSION}
 route_planner			planner		0		0		./route_planner --graph ${GRAPH} ${RDDF}
 offroad_planner  		planner		0		0		./offroad_planner
 behavior_selector		planner		0		0		./behavior_selector
 MPP				planner   	0		0		./model_predictive_planner
 obstacle_avoider   		planner 	0		0		./obstacle_avoider

#### Interfaces
 navigator_gui			interface	1		0		./navigator_gui2 -map_path ${MAP_PATH} -annotation_path ${RDDF}
 viewer_3D			interface	1		0		./viewer_3D
 fake_gps			utils		1		0		./util_publish_pose 20 ${START_X} ${START_Y} ${START_THETA}
# fake_gps			utils		1		0		./util_publish_pose 20 ${INITIAL_X} ${INITIAL_Y} ${INITIAL_THETA}
 util_publish_initial_pose   	init_pose	1		0		./util_publish_initial_pose	${START_X}, ${START_Y}, ${START_THETA}, 4, 0.0
# util_publish_initial_pose   	init_pose	0		0		./util_publish_initial_pose	${INITIAL_X}, ${INITIAL_Y}, ${INITIAL_THETA}, 4, 0.0
 Cam_view			interface			1			0		./camera_viewer 1

