# Este arquivo ee usado como entrada do programa bin/proccontrol.
# Quando proccontrol ee invocado (central precisa estar rodando), 
# ele inicia os modulos listados.
#
# Cada modulo pode pertencer a um grupo. O programa bin/proccontrol_gui (este
# programa requer a instalacao de Carmen com o pacote Qt 3.3 (nao default)) 
# pode parar ou iniciar todo um grupo ou cada modulo individualmente.
# O programa proccontrol_gui pode, ainda, examinar ou nao a saida de cada
# modulo que esteja rodando.
# 
# Agrupamentos pode ser usados para facilitar testes de funcionalidades.
#
# O exemplo abaixo ee uma entrada de proccontrol que pede ao mesmo para
# fazer o equivalente ao demandado pelo antigo script run_all.bat.
# Voce pode invocar proccontrol no terminal passando um arquivo como
# este como parametro (./proccontrol process.ini) sem coloca-lo 
# (proccontrol) em background. Apos fazer isso, com um crtl+c voce
# "mata" todos os processos (o ctrl+c ee equivalente ao all_stop.bat)
#
# Se proccontrol ee invocado sem paremetros, ele procura o arquivo
# process.ini no diretorio corrente. Se ele nao achar, ele procura
# o mesmo arquivo no diretorio ../race/src/ Se ainda assim ele nao
# achar, ele termina com o erro:
# "Error: could not open process file ../race/src/process.ini"
#
# Se, no exemplo abaixo, requested_state for igual a 1 (verdadeiro), 
# quando proccontrol ee invocado o modulo ee iniciado automaticamente.
# Se watch_heartbeats for igual a 1 (verdadeiro), proccontrol vai monitorar
# se o modulo esta "vivo"; isto ee, vai verificar se o modulo esta enviando
# mensagens do tipo carmen_heartbeat_message periodicamente; isso pode
# ser feito por meio da funccao carmen_publish_heartbeat(char *module_name).
# Se o modulo nao enviar, ele ee morto (killed) e reiniciado (enquanto
# persistir a falta de "heartbeats"). Os modulos robot e simulator enviam
# hartbeats, por exemplo.
# 
# Em um situacao de uso normal, o usuario abriria tres terminais:
# no primeiro executaria o central (isso precisa ser feito apenas 
# uma vez); no segundo, proccontrol xxx.ini; e no terceiro, proccontrol_gui,
# caso queira um controle mais fino sobre os processos sendo executados.
# Existem outros programas associados a proccontrol (proccontrol_setgroup,
# proccontrol_setmodule, proccontrol_viewoutput e watchdog) que nao foram 
# tratados aqui.


############################### RASPBERRY SENSORBOX ###############################
# Aceess one terminal on the raspberry           ssh pi@192.168.1.15
# To run the CAMERA                              pi_camera/buid/pi_camera_server_driver
# To run XSENS                                   ~/carmen_lcad/src/xsens_MTi-G/xsens_mtig
# Start the Wifi Services                        sudo systemctl start hostapd && sudo systemctl start dnsmasq

###################################################################################


# Exemplo de entrada de proccontrol:
#module name 		group_name	requested_state	watch_heartbeats	command_line
#### Serviccos de suporte
 jaus		 	support 	1		0			../sharedlib/OpenJAUS/ojNodeManager/bin/ojNodeManager ../sharedlib/OpenJAUS/ojNodeManager/nodeManager_Astru.conf a
 car_driver	  	support 	1		0			../sharedlib/OpenJAUS/ojAstru/bin/ojAstru can0 can1
 param_daemon		support 	1		0			./param_daemon atego1730_suzano/carmen-mercedes-atego-suzano.ini
 proc_control		support 	1		0			./proccontrol_gui
 map_server		support		1		0			./map_server -map_path ../data/map_volta_da_ufes-20210131-art2 -map_x 7757721.8 -map_y -363569.5 -block_map on  -lanemap_incoming_message_type 0
 playback		support 	0		0			./playback /dados/log_volta_da_ufes_astru-20211005.txt
 playcontrol		support 	0		0			./playback_control
 logger 		support 	0		0			./logger /mnt/ssd-astru/log-iracemapolis-20211215-2-zigzag.txt

#### Robot
 ford_escape 		robot	 	1		0			./ford_escape_hybrid #> results_pid.txt
 base_ackerman 		robot	 	1		0			./base_ackerman

#### Sensores
 pi_imu_server		sensors		1		0   			ssh -t pi@192.168.1.15 'cd carmen_lcad/src/pi_imu/pi_imu_server; Output/pi_imu_server_driver'
 pi_imu_client		sensors 	1 		0 			./pi_imu_client_driver
 pi_gps_server		sensors		1		0			ssh -t pi@192.168.1.15 '/home/pi/carmen_lcad/src/gps/gps_reachm_server /dev/ttyACM0 115200 1 5022'
 pi_gps_client		sensors		1		0			./gps_reachm_client 192.168.1.15 5022
 camera			sensors		1		0			./camera_drivers intelbras1 1
 camera2		sensors		0		0			./camera_drivers intelbras2 2
 velodyne		sensors		1		0			./velodyne
 lidar_5		sensors		0		0			./lidars 5
 laser_ldmrs		sensors		0		0			./laser_ldmrs 192.168.0.104 12002
# OS1-64		sensors		1		0			./ouster -sensor_ip 192.168.1.200 -host_ip 192.168.1.1 -sensor_id 0 -publish_imu off -intensity_type 1 -mode MODE_1024x20
 ZED_driver		sensors 	0		0			./zed_driver 1

#### Processamento dos dados dos Sensores
 gps_xyz		sensor_filter	1		0			./gps_xyz

#### SLAM
 fused_odometry		SLAM 		1		0			./fused_odometry
 localize		SLAM		0		0			./localize_ackerman -mapping_mode off
 mapper			SLAM		0		0			./mapper -map_path ../data/mapper_teste
 od_mapper		SLAM		1		0			./obstacle_distance_mapper

#### Hierarquia de controle (top-down)
# task_manager 		planner 	0		0			./task_manager -mission mission.txt
 route_planner		planner		1		0			./route_planner ../data/rndf/rddf-log_volta_da_ufes-20190625-contrario.txt ../data/rddf_annotation_log_20140418.txt 3 ../data/graphs/graph_volta_da_ufes-201903025_150m-5.gr 200
 offroad_planner	planner		1		0			./offroad_planner
 behavior_selector	planner		1		0			./behavior_selector
 MPP			planner		1		0			./model_predictive_planner
 obstacle_avoider	planner		1		0			./obstacle_avoider

#### Interfaces
 navigator_gui		interface	1		0			./navigator_gui2 -map_path ../data/map_volta_da_ufes-20210131-art2 -annotation_path ../data/rddf_annotation_log_20191003.txt
 viewer_3D		interface	1		0			./viewer_3D
 Camera1		monitors	1		0			./camera_viewer 1
# Camera2		monitors	1		0			./camera_viewer 2

