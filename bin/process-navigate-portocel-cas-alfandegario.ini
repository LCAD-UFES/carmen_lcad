# Este arquivo ee usado como entrada do programa bin/proccontrol.
# Quando proccontrol ee invocado (central precisa estar rodando),
# ele inicia os modulos listados.
#
# Cada modulo pode pertencer a um grupo. O programa bin/proccontrol_gui (este
# programa requer a instalacao de Carmen com o pacote Qt 3.3 (nao default))
# pode parar ou iniciar todo um grupo ou cada modulo individualmente.
# O programa proccontrol_gui pode, ainda, examinar ou nao a saida de cada
# modulo que esteja rodando.
#
# Agrupamentos pode ser usados para facilitar testes de funcionalidades.
#
# O exemplo abaixo ee uma entrada de proccontrol que pede ao mesmo para
# fazer o equivalente ao demandado pelo antigo script run_all.bat.
# Voce pode invocar proccontrol no terminal passando um arquivo como
# este como parametro (./proccontrol process.ini) sem coloca-lo
# (proccontrol) em background. Apos fazer isso, com um crtl+c voce
# "mata" todos os processos (o ctrl+c ee equivalente ao all_stop.bat)
#
# Se proccontrol ee invocado sem paremetros, ele procura o arquivo
# process.ini no diretorio corrente. Se ele nao achar, ele procura
# o mesmo arquivo no diretorio ../race/src/ Se ainda assim ele nao
# achar, ele termina com o erro:
# "Error: could not open process file ../race/src/process.ini"
#
# Se, no exemplo abaixo, requested_state for igual a 1 (verdadeiro),
# quando proccontrol ee invocado o modulo ee iniciado automaticamente.
# Se watch_heartbeats for igual a 1 (verdadeiro), proccontrol vai monitorar
# se o modulo esta "vivo"; isto ee, vai verificar se o modulo esta enviando
# mensagens do tipo carmen_heartbeat_message periodicamente; isso pode
# ser feito por meio da funccao carmen_publish_heartbeat(char *module_name).
# Se o modulo nao enviar, ele ee morto (killed) e reiniciado (enquanto
# persistir a falta de "heartbeats"). Os modulos robot e simulator enviam
# hartbeats, por exemplo.
#
# Em um situacao de uso normal, o usuario abriria tres terminais:
# no primeiro executaria o central (isso precisa ser feito apenas
# uma vez); no segundo, proccontrol xxx.ini; e no terceiro, proccontrol_gui,
# caso queira um controle mais fino sobre os processos sendo executados.
# Existem outros programas associados a proccontrol (proccontrol_setgroup,
# proccontrol_setmodule, proccontrol_viewoutput e watchdog) que nao foram
# tratados aqui.
#
# Exemplo de entrada de proccontrol:
#module name 		group_name	requested_state	watch_heartbeats	command_line
#### Serviccos de suporte
 param_daemon 	    	support 	1		0			./param_daemon atego1730_suzano/carmen-mercedes-atego-suzano.ini
# param_daemon		support 	1		0			./param_daemon ../src/carmen-ford-escape-sensorbox-2.ini
 proc_control		support		1		0			./proccontrol_gui

 map_server		support		1		0			./map_server -map_path ../data/map_portocel-cas-alfandegario-20210617-3 -map_x 7805569.766632 -map_y -389446.677333 -block_map on -lanemap_incoming_message_type 0
 simulator 		support 	1		0			./simulator_ackerman > results_pid.txt # -output_log caco_log.txt

#### SLAM
 localize		localize	1		0			./localize_ackerman -mapping_mode off
 mapper			SLAM		1		0			./mapper -map_path ../data/mapper_teste2
 od_mapper		SLAM		1		0			./obstacle_distance_mapper

#### Hierarquia de controle (top-down)
 task_manager 		support 	0		0			./task_manager -mission mission.txt
 App			planner		0		0			./call_iara_main /home/lcad/carmen_lcad/data/rddf_annotation_log_20140418.txt
 route_planner		planner		1		0			./route_planner ../data/rndf/rddf-log_volta_da_ufes-20190625-contrario.txt ../data/rddf_annotation_log_20140418.txt 3 ../data/graphs/graph-rddf-log_portocel-cas-alfandegario-20210617-3.gr 250
 offroad_planner	planner		1		0			./offroad_planner
 behavior_selector	planner		1		0			./behavior_selector
 MPP		 	planner		1		0			./model_predictive_planner
 obstacle_avoider	planner		1		0			./obstacle_avoider

#### Interfaces
 navigator_gui		interface	1		0			./navigator_gui2 -map_path ../data/map_volta_da_ufes_20200814 -annotation_path ../data/rddf_annotation_log_20140418.txt
 viewer_3D		interface	1		0			./viewer_3D -fv_flag on

 NOD_sim		support		0		0			./neural_object_detector_simulator

# Entrada adiante do LCAD
 util_publish_initial_pose init_pose	1		0			./util_publish_initial_pose 7805894.37, -389244.31, 0.550
# util_publish_initial_pose init_pose	1		0			./util_publish_initial_pose 7806069.09, -389275.25, -2.598
# FINAL GOAL
 util_publish_final_goal   final_goal	1		0			./util_publish_final_goal   7805852.35, -389264.38, -2.608 6 


