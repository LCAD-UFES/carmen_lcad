
# Exemplo de entrada de proccontrol:
#module name 		group_name	requested_state	watch_heartbeats	command_line
#### Serviccos de suporte
 jaus		 	support 	1		0			../sharedlib/OpenJAUS/ojNodeManager/bin/ojNodeManager ../sharedlib/OpenJAUS/ojNodeManager/nodeManager_MultiMoverM700.conf a
 car_driver	  	support 	1		0			../sharedlib/OpenJAUS/ojMultiMoverM700/bin/ojMultiMoverM700 vcan1 vcan0
 param_daemon 	    	support 	1		0			./param_daemon ../src/carmen-multimover.ini
 proc_control		support 	1		0			./proccontrol_gui
 map_server		support		1		0			./map_server -map_path ../data/map-ecotech4-arcelor-20200722 -map_x 7760162.36 -map_y -371700.03 -block_map on  -lanemap_incoming_message_type 0

 playback		support 	1		0			./playback /dados/log_can-20201210-5.txt # log com operador
# playback		support 	1		0			./playback /dados/log_can-20201210-1.txt # log buzina, alavanca, etc.

 playback		support 	1		0			./can_playback 0 vcan0
 playback		support 	1		0			./can_playback 1 vcan1

 playcontrol		support 	1		0			./playback_control

#### Robo
 ford_escape 		robot       	1		0			./ford_escape_hybrid > results_pid.txt
 base_ackerman 		robot	 	1		0			./base_ackerman   

#### Sensores
# pi_imu_server		sensors		1		0   			ssh -t pi@192.168.1.15 'cd carmen_lcad/src/pi_imu/pi_imu_server; Output/pi_imu_server_driver'
# pi_imu_client		sensors 	1	 	0 			./pi_imu_client_driver
# pi_gps_server		sensors		1		0			ssh pi@192.168.1.15 '/home/pi/carmen_lcad/src/gps/gps_reachm_server /dev/ttyACM0 115200 1 5022'
# pi_gps_client		sensors		1		0			./gps_reachm_client 192.168.1.15 5022
# camera			sensors		1		0			./camera_drivers intelbras1 1
# velodyne		sensors		1		0			./velodyne
# laser_ldmrs		sensors		1		0			./laser_ldmrs 192.168.0.104 12002

#### Processamento dos dados dos Sensores
 neural2_obj_tracker	detection	0		0			./neural_object_detector_tracker 2 1

#### SLAM
 gps_xyz		sensor_filter	1		0			./gps_xyz
 fused_odometry		SLAM        	1		0			./fused_odometry
 localize		SLAM		1		0			./localize_ackerman -mapping_mode off
 mapper			SLAM		1		0			./mapper -map_path ../data/mapper_teste2
 od_mapper		SLAM		1		0			./obstacle_distance_mapper

#### Hierarquia de controle (top-down)

# Para usar o RNDF em vez do route planner desligue a flag route_planner_in_graph_mode
# Dessa forma o route_planer fara o trabalho do rddf_play. 
# rndf			planner	      	1		0			./rddf_play ../data/rndf/rddf-log-ecotech4-arcelor-20200722.txt ../data/rddf_annotation_log_ecotech4-arcelor-20200722.txt

 route_planner		planner		1		0			./route_planner ../data/rndf/rddf-log_volta_da_ufes-20190625-contrario.txt ../data/rddf_annotation_log_ecotech4-arcelor-20200722.txt 3 ../data/graphs/graph-arcelor9.gr 200
 offroad_planner  	planner		1		0			./offroad_planner
 behavior_selector	planner		1		0			./behavior_selector
 rrt_follower	    	planner		1		0			./rrt_path_follower
 MPP			planner   	1		0			./model_predictive_planner
 obstacle_avoider   	planner 	1		0			./obstacle_avoider

#### Interfaces
 navigator_gui		interface	1		0			./navigator_gui2 -map_path ../data/map-ecotech4-arcelor-20200722 -annotation_path ../data/rddf_annotation_log_ecotech4-arcelor-20200722.txt
 viewer_3D		interface	0		0			./viewer_3D
# Camera1		monitors	1		0			./camera_viewer 1
 Camera_log		monitors	1		0			./camera_viewer 2
 voice_interface	interface	0		0			./voice_interface
 rasa			interface	0		0			python3 -m rasa_nlu.server --path ../src/voice_interface/models --response_log ../src/voice_interface/logs

# FINAL GOAL
# Chegada no Laboratorio Coqueria
 util_publish_final_goal   final_goal	1		0			sleep 2; ./util_publish_final_goal   7760127.70 -371701.85 1.486 5

